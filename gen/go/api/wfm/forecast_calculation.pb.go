// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: forecast_calculation.proto

package wfm

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/webitel/webitel-go-kit/cmd/protoc-gen-go-webitel/gen/go/proto/webitel"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateForecastCalculationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ForecastCalculation `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateForecastCalculationRequest) Reset() {
	*x = CreateForecastCalculationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateForecastCalculationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateForecastCalculationRequest) ProtoMessage() {}

func (x *CreateForecastCalculationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateForecastCalculationRequest.ProtoReflect.Descriptor instead.
func (*CreateForecastCalculationRequest) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{0}
}

func (x *CreateForecastCalculationRequest) GetItem() *ForecastCalculation {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateForecastCalculationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ForecastCalculation `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateForecastCalculationResponse) Reset() {
	*x = CreateForecastCalculationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateForecastCalculationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateForecastCalculationResponse) ProtoMessage() {}

func (x *CreateForecastCalculationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateForecastCalculationResponse.ProtoReflect.Descriptor instead.
func (*CreateForecastCalculationResponse) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{1}
}

func (x *CreateForecastCalculationResponse) GetItem() *ForecastCalculation {
	if x != nil {
		return x.Item
	}
	return nil
}

type ReadForecastCalculationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields []string `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ReadForecastCalculationRequest) Reset() {
	*x = ReadForecastCalculationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadForecastCalculationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadForecastCalculationRequest) ProtoMessage() {}

func (x *ReadForecastCalculationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadForecastCalculationRequest.ProtoReflect.Descriptor instead.
func (*ReadForecastCalculationRequest) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{2}
}

func (x *ReadForecastCalculationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReadForecastCalculationRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ReadForecastCalculationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ForecastCalculation `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ReadForecastCalculationResponse) Reset() {
	*x = ReadForecastCalculationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadForecastCalculationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadForecastCalculationResponse) ProtoMessage() {}

func (x *ReadForecastCalculationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadForecastCalculationResponse.ProtoReflect.Descriptor instead.
func (*ReadForecastCalculationResponse) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{3}
}

func (x *ReadForecastCalculationResponse) GetItem() *ForecastCalculation {
	if x != nil {
		return x.Item
	}
	return nil
}

type SearchForecastCalculationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Q      *string  `protobuf:"bytes,1,opt,name=q,proto3,oneof" json:"q,omitempty"`
	Page   *int32   `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	Size   *int32   `protobuf:"varint,3,opt,name=size,proto3,oneof" json:"size,omitempty"`
	Sort   *string  `protobuf:"bytes,4,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	Fields []string `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *SearchForecastCalculationRequest) Reset() {
	*x = SearchForecastCalculationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchForecastCalculationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchForecastCalculationRequest) ProtoMessage() {}

func (x *SearchForecastCalculationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchForecastCalculationRequest.ProtoReflect.Descriptor instead.
func (*SearchForecastCalculationRequest) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{4}
}

func (x *SearchForecastCalculationRequest) GetQ() string {
	if x != nil && x.Q != nil {
		return *x.Q
	}
	return ""
}

func (x *SearchForecastCalculationRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *SearchForecastCalculationRequest) GetSize() int32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *SearchForecastCalculationRequest) GetSort() string {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return ""
}

func (x *SearchForecastCalculationRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SearchForecastCalculationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ForecastCalculation `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Next  bool                   `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *SearchForecastCalculationResponse) Reset() {
	*x = SearchForecastCalculationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchForecastCalculationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchForecastCalculationResponse) ProtoMessage() {}

func (x *SearchForecastCalculationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchForecastCalculationResponse.ProtoReflect.Descriptor instead.
func (*SearchForecastCalculationResponse) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{5}
}

func (x *SearchForecastCalculationResponse) GetItems() []*ForecastCalculation {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchForecastCalculationResponse) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type UpdateForecastCalculationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ForecastCalculation `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateForecastCalculationRequest) Reset() {
	*x = UpdateForecastCalculationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateForecastCalculationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateForecastCalculationRequest) ProtoMessage() {}

func (x *UpdateForecastCalculationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateForecastCalculationRequest.ProtoReflect.Descriptor instead.
func (*UpdateForecastCalculationRequest) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateForecastCalculationRequest) GetItem() *ForecastCalculation {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateForecastCalculationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ForecastCalculation `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateForecastCalculationResponse) Reset() {
	*x = UpdateForecastCalculationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateForecastCalculationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateForecastCalculationResponse) ProtoMessage() {}

func (x *UpdateForecastCalculationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateForecastCalculationResponse.ProtoReflect.Descriptor instead.
func (*UpdateForecastCalculationResponse) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateForecastCalculationResponse) GetItem() *ForecastCalculation {
	if x != nil {
		return x.Item
	}
	return nil
}

type DeleteForecastCalculationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteForecastCalculationRequest) Reset() {
	*x = DeleteForecastCalculationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteForecastCalculationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteForecastCalculationRequest) ProtoMessage() {}

func (x *DeleteForecastCalculationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteForecastCalculationRequest.ProtoReflect.Descriptor instead.
func (*DeleteForecastCalculationRequest) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteForecastCalculationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteForecastCalculationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteForecastCalculationResponse) Reset() {
	*x = DeleteForecastCalculationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteForecastCalculationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteForecastCalculationResponse) ProtoMessage() {}

func (x *DeleteForecastCalculationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteForecastCalculationResponse.ProtoReflect.Descriptor instead.
func (*DeleteForecastCalculationResponse) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteForecastCalculationResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ExecuteForecastCalculationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId       int64          `protobuf:"varint,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ForecastData *FilterBetween `protobuf:"bytes,2,opt,name=forecast_data,json=forecastData,proto3" json:"forecast_data,omitempty"`
}

func (x *ExecuteForecastCalculationRequest) Reset() {
	*x = ExecuteForecastCalculationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteForecastCalculationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteForecastCalculationRequest) ProtoMessage() {}

func (x *ExecuteForecastCalculationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteForecastCalculationRequest.ProtoReflect.Descriptor instead.
func (*ExecuteForecastCalculationRequest) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{10}
}

func (x *ExecuteForecastCalculationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExecuteForecastCalculationRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *ExecuteForecastCalculationRequest) GetForecastData() *FilterBetween {
	if x != nil {
		return x.ForecastData
	}
	return nil
}

type ExecuteForecastCalculationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ExecuteForecastCalculationResponse_Forecast `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ExecuteForecastCalculationResponse) Reset() {
	*x = ExecuteForecastCalculationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteForecastCalculationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteForecastCalculationResponse) ProtoMessage() {}

func (x *ExecuteForecastCalculationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteForecastCalculationResponse.ProtoReflect.Descriptor instead.
func (*ExecuteForecastCalculationResponse) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{11}
}

func (x *ExecuteForecastCalculationResponse) GetItems() []*ExecuteForecastCalculationResponse_Forecast {
	if x != nil {
		return x.Items
	}
	return nil
}

type ForecastCalculation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId    int64         `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt   int64         `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy   *LookupEntity `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt   int64         `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy   *LookupEntity `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Name        string        `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Description *string       `protobuf:"bytes,8,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Procedure   string        `protobuf:"bytes,9,opt,name=procedure,proto3" json:"procedure,omitempty"`
	Args        []string      `protobuf:"bytes,10,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *ForecastCalculation) Reset() {
	*x = ForecastCalculation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForecastCalculation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForecastCalculation) ProtoMessage() {}

func (x *ForecastCalculation) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForecastCalculation.ProtoReflect.Descriptor instead.
func (*ForecastCalculation) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{12}
}

func (x *ForecastCalculation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ForecastCalculation) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *ForecastCalculation) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ForecastCalculation) GetCreatedBy() *LookupEntity {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *ForecastCalculation) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ForecastCalculation) GetUpdatedBy() *LookupEntity {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *ForecastCalculation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ForecastCalculation) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ForecastCalculation) GetProcedure() string {
	if x != nil {
		return x.Procedure
	}
	return ""
}

func (x *ForecastCalculation) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type ExecuteForecastCalculationResponse_Forecast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Agents    int64 `protobuf:"varint,2,opt,name=agents,proto3" json:"agents,omitempty"`
}

func (x *ExecuteForecastCalculationResponse_Forecast) Reset() {
	*x = ExecuteForecastCalculationResponse_Forecast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forecast_calculation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteForecastCalculationResponse_Forecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteForecastCalculationResponse_Forecast) ProtoMessage() {}

func (x *ExecuteForecastCalculationResponse_Forecast) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_calculation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteForecastCalculationResponse_Forecast.ProtoReflect.Descriptor instead.
func (*ExecuteForecastCalculationResponse_Forecast) Descriptor() ([]byte, []int) {
	return file_forecast_calculation_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ExecuteForecastCalculationResponse_Forecast) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ExecuteForecastCalculationResponse_Forecast) GetAgents() int64 {
	if x != nil {
		return x.Agents
	}
	return 0
}

var File_forecast_calculation_proto protoreflect.FileDescriptor

var file_forecast_calculation_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x77, 0x66,
	0x6d, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x51,
	0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0xc2, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x83, 0x01, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x6b, 0xba, 0x48, 0x68, 0x92, 0x01, 0x65, 0x18, 0x01, 0x22, 0x61, 0x72, 0x5f, 0x10,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x1f, 0x52, 0x65, 0x61, 0x64, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xc5, 0x02, 0x0a, 0x20, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x01,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xfa, 0x01, 0x48, 0x00, 0x52, 0x01, 0x71, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02,
	0x20, 0x00, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x1a, 0x02, 0x20, 0x00, 0x48, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x83, 0x01, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x6b, 0xba, 0x48, 0x68, 0x92, 0x01,
	0x65, 0x18, 0x01, 0x22, 0x61, 0x72, 0x5f, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x52, 0x09, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x04,
	0x0a, 0x02, 0x5f, 0x71, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x22,
	0x67, 0x0a, 0x21, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0x58, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x66, 0x6d,
	0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0x51, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x46, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x3e, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x22, 0x02, 0x20,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x21, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x48,
	0x07, 0xc8, 0x01, 0x01, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77,
	0x66, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e,
	0x52, 0x0c, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xae,
	0x01, 0x0a, 0x22, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x40, 0x0a,
	0x08, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xa9, 0x04, 0x0a, 0x13, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0xc8, 0x01, 0x01, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xfa, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0xc5, 0x01, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x42, 0xa6, 0x01, 0xba, 0x48, 0xa2, 0x01, 0xba, 0x01, 0x9b, 0x01, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x12, 0x70, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x64, 0x75, 0x72, 0x65, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x77, 0x66, 0x6d, 0x20, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x73, 0x68,
	0x6f, 0x75, 0x6c, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x20, 0x6f, 0x6e,
	0x6c, 0x79, 0x20, 0x61, 0x2d, 0x7a, 0x2c, 0x20, 0x41, 0x2d, 0x5a, 0x2c, 0x20, 0x30, 0x2d, 0x39,
	0x2c, 0x20, 0x5f, 0x20, 0x28, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x77, 0x66,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x29, 0x1a, 0x1c, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x28, 0x22, 0x5e, 0x77, 0x66, 0x6d,
	0x5c, 0x5c, 0x2e, 0x5c, 0x5c, 0x77, 0x2b, 0x24, 0x22, 0x29, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0xc8, 0x01, 0x01, 0x92, 0x01,
	0x04, 0x08, 0x03, 0x18, 0x01, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xf9, 0x07, 0x0a, 0x1a,
	0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x90, 0xb5, 0x18, 0x00, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x77, 0x66, 0x6d, 0x2f, 0x6c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x73, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x98, 0x01, 0x0a, 0x17, 0x52, 0x65,
	0x61, 0x64, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x77, 0x66, 0x6d,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x32, 0x90, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x77,
	0x66, 0x6d, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x99, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x77, 0x66, 0x6d, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2d, 0x90, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f,
	0x77, 0x66, 0x6d, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x66, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0xa6, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x90,
	0xb5, 0x18, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x1a, 0x2b, 0x2f, 0x77,
	0x66, 0x6d, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x7b, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x69, 0x64, 0x7d, 0x12, 0x9e, 0x01, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x90, 0xb5, 0x18, 0x03, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x2a, 0x26, 0x2f, 0x77, 0x66, 0x6d, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73,
	0x2f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa9, 0x01, 0x0a, 0x1a, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x77, 0x66, 0x6d, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x90, 0xb5, 0x18, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x77, 0x66, 0x6d, 0x2f, 0x6c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x73, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x1a, 0x0f, 0x8a, 0xb5, 0x18, 0x0b, 0x77, 0x66, 0x6d, 0x5f,
	0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x77, 0x66, 0x6d, 0x3b, 0x77, 0x66, 0x6d, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_forecast_calculation_proto_rawDescOnce sync.Once
	file_forecast_calculation_proto_rawDescData = file_forecast_calculation_proto_rawDesc
)

func file_forecast_calculation_proto_rawDescGZIP() []byte {
	file_forecast_calculation_proto_rawDescOnce.Do(func() {
		file_forecast_calculation_proto_rawDescData = protoimpl.X.CompressGZIP(file_forecast_calculation_proto_rawDescData)
	})
	return file_forecast_calculation_proto_rawDescData
}

var file_forecast_calculation_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_forecast_calculation_proto_goTypes = []interface{}{
	(*CreateForecastCalculationRequest)(nil),            // 0: wfm.CreateForecastCalculationRequest
	(*CreateForecastCalculationResponse)(nil),           // 1: wfm.CreateForecastCalculationResponse
	(*ReadForecastCalculationRequest)(nil),              // 2: wfm.ReadForecastCalculationRequest
	(*ReadForecastCalculationResponse)(nil),             // 3: wfm.ReadForecastCalculationResponse
	(*SearchForecastCalculationRequest)(nil),            // 4: wfm.SearchForecastCalculationRequest
	(*SearchForecastCalculationResponse)(nil),           // 5: wfm.SearchForecastCalculationResponse
	(*UpdateForecastCalculationRequest)(nil),            // 6: wfm.UpdateForecastCalculationRequest
	(*UpdateForecastCalculationResponse)(nil),           // 7: wfm.UpdateForecastCalculationResponse
	(*DeleteForecastCalculationRequest)(nil),            // 8: wfm.DeleteForecastCalculationRequest
	(*DeleteForecastCalculationResponse)(nil),           // 9: wfm.DeleteForecastCalculationResponse
	(*ExecuteForecastCalculationRequest)(nil),           // 10: wfm.ExecuteForecastCalculationRequest
	(*ExecuteForecastCalculationResponse)(nil),          // 11: wfm.ExecuteForecastCalculationResponse
	(*ForecastCalculation)(nil),                         // 12: wfm.ForecastCalculation
	(*ExecuteForecastCalculationResponse_Forecast)(nil), // 13: wfm.ExecuteForecastCalculationResponse.Forecast
	(*FilterBetween)(nil),                               // 14: wfm.FilterBetween
	(*LookupEntity)(nil),                                // 15: wfm.LookupEntity
}
var file_forecast_calculation_proto_depIdxs = []int32{
	12, // 0: wfm.CreateForecastCalculationRequest.item:type_name -> wfm.ForecastCalculation
	12, // 1: wfm.CreateForecastCalculationResponse.item:type_name -> wfm.ForecastCalculation
	12, // 2: wfm.ReadForecastCalculationResponse.item:type_name -> wfm.ForecastCalculation
	12, // 3: wfm.SearchForecastCalculationResponse.items:type_name -> wfm.ForecastCalculation
	12, // 4: wfm.UpdateForecastCalculationRequest.item:type_name -> wfm.ForecastCalculation
	12, // 5: wfm.UpdateForecastCalculationResponse.item:type_name -> wfm.ForecastCalculation
	14, // 6: wfm.ExecuteForecastCalculationRequest.forecast_data:type_name -> wfm.FilterBetween
	13, // 7: wfm.ExecuteForecastCalculationResponse.items:type_name -> wfm.ExecuteForecastCalculationResponse.Forecast
	15, // 8: wfm.ForecastCalculation.created_by:type_name -> wfm.LookupEntity
	15, // 9: wfm.ForecastCalculation.updated_by:type_name -> wfm.LookupEntity
	0,  // 10: wfm.ForecastCalculationService.CreateForecastCalculation:input_type -> wfm.CreateForecastCalculationRequest
	2,  // 11: wfm.ForecastCalculationService.ReadForecastCalculation:input_type -> wfm.ReadForecastCalculationRequest
	4,  // 12: wfm.ForecastCalculationService.SearchForecastCalculation:input_type -> wfm.SearchForecastCalculationRequest
	6,  // 13: wfm.ForecastCalculationService.UpdateForecastCalculation:input_type -> wfm.UpdateForecastCalculationRequest
	8,  // 14: wfm.ForecastCalculationService.DeleteForecastCalculation:input_type -> wfm.DeleteForecastCalculationRequest
	10, // 15: wfm.ForecastCalculationService.ExecuteForecastCalculation:input_type -> wfm.ExecuteForecastCalculationRequest
	1,  // 16: wfm.ForecastCalculationService.CreateForecastCalculation:output_type -> wfm.CreateForecastCalculationResponse
	3,  // 17: wfm.ForecastCalculationService.ReadForecastCalculation:output_type -> wfm.ReadForecastCalculationResponse
	5,  // 18: wfm.ForecastCalculationService.SearchForecastCalculation:output_type -> wfm.SearchForecastCalculationResponse
	7,  // 19: wfm.ForecastCalculationService.UpdateForecastCalculation:output_type -> wfm.UpdateForecastCalculationResponse
	9,  // 20: wfm.ForecastCalculationService.DeleteForecastCalculation:output_type -> wfm.DeleteForecastCalculationResponse
	11, // 21: wfm.ForecastCalculationService.ExecuteForecastCalculation:output_type -> wfm.ExecuteForecastCalculationResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_forecast_calculation_proto_init() }
func file_forecast_calculation_proto_init() {
	if File_forecast_calculation_proto != nil {
		return
	}
	file_lookup_proto_init()
	file_filter_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_forecast_calculation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateForecastCalculationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateForecastCalculationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadForecastCalculationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadForecastCalculationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchForecastCalculationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchForecastCalculationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateForecastCalculationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateForecastCalculationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteForecastCalculationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteForecastCalculationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteForecastCalculationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteForecastCalculationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForecastCalculation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forecast_calculation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteForecastCalculationResponse_Forecast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_forecast_calculation_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_forecast_calculation_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_forecast_calculation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_forecast_calculation_proto_goTypes,
		DependencyIndexes: file_forecast_calculation_proto_depIdxs,
		MessageInfos:      file_forecast_calculation_proto_msgTypes,
	}.Build()
	File_forecast_calculation_proto = out.File
	file_forecast_calculation_proto_rawDesc = nil
	file_forecast_calculation_proto_goTypes = nil
	file_forecast_calculation_proto_depIdxs = nil
}
