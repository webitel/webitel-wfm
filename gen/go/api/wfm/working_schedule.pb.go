// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: working_schedule.proto

package wfm

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/webitel/webitel-go-kit/cmd/protoc-gen-go-webitel/gen/go/proto/webitel"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkingScheduleState int32

const (
	WorkingScheduleState_WORKING_SCHEDULE_STATE_UNSPECIFIED WorkingScheduleState = 0
	WorkingScheduleState_WORKING_SCHEDULE_STATE_ACTIVE      WorkingScheduleState = 1
	WorkingScheduleState_WORKING_SCHEDULE_STATE_PENDING     WorkingScheduleState = 2
	WorkingScheduleState_WORKING_SCHEDULE_STATE_DRAFT       WorkingScheduleState = 3
	WorkingScheduleState_WORKING_SCHEDULE_STATE_ARCHIVED    WorkingScheduleState = 4
)

// Enum value maps for WorkingScheduleState.
var (
	WorkingScheduleState_name = map[int32]string{
		0: "WORKING_SCHEDULE_STATE_UNSPECIFIED",
		1: "WORKING_SCHEDULE_STATE_ACTIVE",
		2: "WORKING_SCHEDULE_STATE_PENDING",
		3: "WORKING_SCHEDULE_STATE_DRAFT",
		4: "WORKING_SCHEDULE_STATE_ARCHIVED",
	}
	WorkingScheduleState_value = map[string]int32{
		"WORKING_SCHEDULE_STATE_UNSPECIFIED": 0,
		"WORKING_SCHEDULE_STATE_ACTIVE":      1,
		"WORKING_SCHEDULE_STATE_PENDING":     2,
		"WORKING_SCHEDULE_STATE_DRAFT":       3,
		"WORKING_SCHEDULE_STATE_ARCHIVED":    4,
	}
)

func (x WorkingScheduleState) Enum() *WorkingScheduleState {
	p := new(WorkingScheduleState)
	*p = x
	return p
}

func (x WorkingScheduleState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkingScheduleState) Descriptor() protoreflect.EnumDescriptor {
	return file_working_schedule_proto_enumTypes[0].Descriptor()
}

func (WorkingScheduleState) Type() protoreflect.EnumType {
	return &file_working_schedule_proto_enumTypes[0]
}

func (x WorkingScheduleState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkingScheduleState.Descriptor instead.
func (WorkingScheduleState) EnumDescriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{0}
}

type CreateWorkingScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *WorkingSchedule `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateWorkingScheduleRequest) Reset() {
	*x = CreateWorkingScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkingScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkingScheduleRequest) ProtoMessage() {}

func (x *CreateWorkingScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkingScheduleRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkingScheduleRequest) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWorkingScheduleRequest) GetItem() *WorkingSchedule {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateWorkingScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *WorkingSchedule `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateWorkingScheduleResponse) Reset() {
	*x = CreateWorkingScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkingScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkingScheduleResponse) ProtoMessage() {}

func (x *CreateWorkingScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkingScheduleResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkingScheduleResponse) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWorkingScheduleResponse) GetItem() *WorkingSchedule {
	if x != nil {
		return x.Item
	}
	return nil
}

type ReadWorkingScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ReadWorkingScheduleRequest) Reset() {
	*x = ReadWorkingScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadWorkingScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadWorkingScheduleRequest) ProtoMessage() {}

func (x *ReadWorkingScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadWorkingScheduleRequest.ProtoReflect.Descriptor instead.
func (*ReadWorkingScheduleRequest) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{2}
}

func (x *ReadWorkingScheduleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReadWorkingScheduleRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ReadWorkingScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *WorkingSchedule `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ReadWorkingScheduleResponse) Reset() {
	*x = ReadWorkingScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadWorkingScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadWorkingScheduleResponse) ProtoMessage() {}

func (x *ReadWorkingScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadWorkingScheduleResponse.ProtoReflect.Descriptor instead.
func (*ReadWorkingScheduleResponse) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{3}
}

func (x *ReadWorkingScheduleResponse) GetItem() *WorkingSchedule {
	if x != nil {
		return x.Item
	}
	return nil
}

type ReadWorkingScheduleForecastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Date *FilterBetween `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *ReadWorkingScheduleForecastRequest) Reset() {
	*x = ReadWorkingScheduleForecastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadWorkingScheduleForecastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadWorkingScheduleForecastRequest) ProtoMessage() {}

func (x *ReadWorkingScheduleForecastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadWorkingScheduleForecastRequest.ProtoReflect.Descriptor instead.
func (*ReadWorkingScheduleForecastRequest) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{4}
}

func (x *ReadWorkingScheduleForecastRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReadWorkingScheduleForecastRequest) GetDate() *FilterBetween {
	if x != nil {
		return x.Date
	}
	return nil
}

type ReadWorkingScheduleForecastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items map[int64]*WorkingScheduleForecast `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ReadWorkingScheduleForecastResponse) Reset() {
	*x = ReadWorkingScheduleForecastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadWorkingScheduleForecastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadWorkingScheduleForecastResponse) ProtoMessage() {}

func (x *ReadWorkingScheduleForecastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadWorkingScheduleForecastResponse.ProtoReflect.Descriptor instead.
func (*ReadWorkingScheduleForecastResponse) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{5}
}

func (x *ReadWorkingScheduleForecastResponse) GetItems() map[int64]*WorkingScheduleForecast {
	if x != nil {
		return x.Items
	}
	return nil
}

type SearchWorkingScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Q      *string  `protobuf:"bytes,1,opt,name=q,proto3,oneof" json:"q,omitempty"`
	Page   *int32   `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	Size   *int32   `protobuf:"varint,3,opt,name=size,proto3,oneof" json:"size,omitempty"`
	Sort   *string  `protobuf:"bytes,4,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	Fields []string `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *SearchWorkingScheduleRequest) Reset() {
	*x = SearchWorkingScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchWorkingScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchWorkingScheduleRequest) ProtoMessage() {}

func (x *SearchWorkingScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchWorkingScheduleRequest.ProtoReflect.Descriptor instead.
func (*SearchWorkingScheduleRequest) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{6}
}

func (x *SearchWorkingScheduleRequest) GetQ() string {
	if x != nil && x.Q != nil {
		return *x.Q
	}
	return ""
}

func (x *SearchWorkingScheduleRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *SearchWorkingScheduleRequest) GetSize() int32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *SearchWorkingScheduleRequest) GetSort() string {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return ""
}

func (x *SearchWorkingScheduleRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SearchWorkingScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*WorkingSchedule `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Next  bool               `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *SearchWorkingScheduleResponse) Reset() {
	*x = SearchWorkingScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchWorkingScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchWorkingScheduleResponse) ProtoMessage() {}

func (x *SearchWorkingScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchWorkingScheduleResponse.ProtoReflect.Descriptor instead.
func (*SearchWorkingScheduleResponse) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{7}
}

func (x *SearchWorkingScheduleResponse) GetItems() []*WorkingSchedule {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchWorkingScheduleResponse) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type UpdateWorkingScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *WorkingSchedule `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateWorkingScheduleRequest) Reset() {
	*x = UpdateWorkingScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkingScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkingScheduleRequest) ProtoMessage() {}

func (x *UpdateWorkingScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkingScheduleRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkingScheduleRequest) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateWorkingScheduleRequest) GetItem() *WorkingSchedule {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateWorkingScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *WorkingSchedule `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateWorkingScheduleResponse) Reset() {
	*x = UpdateWorkingScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkingScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkingScheduleResponse) ProtoMessage() {}

func (x *UpdateWorkingScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkingScheduleResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkingScheduleResponse) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateWorkingScheduleResponse) GetItem() *WorkingSchedule {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateWorkingScheduleAddAgentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Agents []*LookupEntity `protobuf:"bytes,2,rep,name=agents,proto3" json:"agents,omitempty"`
}

func (x *UpdateWorkingScheduleAddAgentsRequest) Reset() {
	*x = UpdateWorkingScheduleAddAgentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkingScheduleAddAgentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkingScheduleAddAgentsRequest) ProtoMessage() {}

func (x *UpdateWorkingScheduleAddAgentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkingScheduleAddAgentsRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkingScheduleAddAgentsRequest) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateWorkingScheduleAddAgentsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateWorkingScheduleAddAgentsRequest) GetAgents() []*LookupEntity {
	if x != nil {
		return x.Agents
	}
	return nil
}

type UpdateWorkingScheduleAddAgentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agents []*LookupEntity `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
}

func (x *UpdateWorkingScheduleAddAgentsResponse) Reset() {
	*x = UpdateWorkingScheduleAddAgentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkingScheduleAddAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkingScheduleAddAgentsResponse) ProtoMessage() {}

func (x *UpdateWorkingScheduleAddAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkingScheduleAddAgentsResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkingScheduleAddAgentsResponse) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateWorkingScheduleAddAgentsResponse) GetAgents() []*LookupEntity {
	if x != nil {
		return x.Agents
	}
	return nil
}

type UpdateWorkingScheduleRemoveAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AgentId int64 `protobuf:"varint,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *UpdateWorkingScheduleRemoveAgentRequest) Reset() {
	*x = UpdateWorkingScheduleRemoveAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkingScheduleRemoveAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkingScheduleRemoveAgentRequest) ProtoMessage() {}

func (x *UpdateWorkingScheduleRemoveAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkingScheduleRemoveAgentRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkingScheduleRemoveAgentRequest) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateWorkingScheduleRemoveAgentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateWorkingScheduleRemoveAgentRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type UpdateWorkingScheduleRemoveAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateWorkingScheduleRemoveAgentResponse) Reset() {
	*x = UpdateWorkingScheduleRemoveAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkingScheduleRemoveAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkingScheduleRemoveAgentResponse) ProtoMessage() {}

func (x *UpdateWorkingScheduleRemoveAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkingScheduleRemoveAgentResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkingScheduleRemoveAgentResponse) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateWorkingScheduleRemoveAgentResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteWorkingScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteWorkingScheduleRequest) Reset() {
	*x = DeleteWorkingScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkingScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkingScheduleRequest) ProtoMessage() {}

func (x *DeleteWorkingScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkingScheduleRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkingScheduleRequest) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteWorkingScheduleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteWorkingScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteWorkingScheduleResponse) Reset() {
	*x = DeleteWorkingScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkingScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkingScheduleResponse) ProtoMessage() {}

func (x *DeleteWorkingScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkingScheduleResponse.ProtoReflect.Descriptor instead.
func (*DeleteWorkingScheduleResponse) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteWorkingScheduleResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WorkingScheduleForecast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forecast []*WorkingScheduleForecast_Forecast `protobuf:"bytes,1,rep,name=forecast,proto3" json:"forecast,omitempty"`
}

func (x *WorkingScheduleForecast) Reset() {
	*x = WorkingScheduleForecast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingScheduleForecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingScheduleForecast) ProtoMessage() {}

func (x *WorkingScheduleForecast) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingScheduleForecast.ProtoReflect.Descriptor instead.
func (*WorkingScheduleForecast) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{16}
}

func (x *WorkingScheduleForecast) GetForecast() []*WorkingScheduleForecast_Forecast {
	if x != nil {
		return x.Forecast
	}
	return nil
}

type WorkingSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId             int64                `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt            int64                `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy            *LookupEntity        `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt            int64                `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy            *LookupEntity        `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Name                 string               `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	State                WorkingScheduleState `protobuf:"varint,8,opt,name=state,proto3,enum=wfm.WorkingScheduleState" json:"state,omitempty"`
	Team                 *LookupEntity        `protobuf:"bytes,9,opt,name=team,proto3" json:"team,omitempty"`
	Calendar             *LookupEntity        `protobuf:"bytes,10,opt,name=calendar,proto3" json:"calendar,omitempty"`
	StartDateAt          int64                `protobuf:"varint,11,opt,name=start_date_at,json=startDateAt,proto3" json:"start_date_at,omitempty"`
	EndDateAt            int64                `protobuf:"varint,12,opt,name=end_date_at,json=endDateAt,proto3" json:"end_date_at,omitempty"`
	StartTimeAt          int64                `protobuf:"varint,13,opt,name=start_time_at,json=startTimeAt,proto3" json:"start_time_at,omitempty"`
	EndTimeAt            int64                `protobuf:"varint,14,opt,name=end_time_at,json=endTimeAt,proto3" json:"end_time_at,omitempty"`
	ExtraSkills          []*LookupEntity      `protobuf:"bytes,15,rep,name=extra_skills,json=extraSkills,proto3" json:"extra_skills,omitempty"`
	BlockOutsideActivity bool                 `protobuf:"varint,16,opt,name=block_outside_activity,json=blockOutsideActivity,proto3" json:"block_outside_activity,omitempty"`
	Agents               []*LookupEntity      `protobuf:"bytes,17,rep,name=agents,proto3" json:"agents,omitempty"`
	TotalAgents          int64                `protobuf:"varint,18,opt,name=total_agents,json=totalAgents,proto3" json:"total_agents,omitempty"`
}

func (x *WorkingSchedule) Reset() {
	*x = WorkingSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingSchedule) ProtoMessage() {}

func (x *WorkingSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingSchedule.ProtoReflect.Descriptor instead.
func (*WorkingSchedule) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{17}
}

func (x *WorkingSchedule) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkingSchedule) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *WorkingSchedule) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WorkingSchedule) GetCreatedBy() *LookupEntity {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *WorkingSchedule) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *WorkingSchedule) GetUpdatedBy() *LookupEntity {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *WorkingSchedule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkingSchedule) GetState() WorkingScheduleState {
	if x != nil {
		return x.State
	}
	return WorkingScheduleState_WORKING_SCHEDULE_STATE_UNSPECIFIED
}

func (x *WorkingSchedule) GetTeam() *LookupEntity {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *WorkingSchedule) GetCalendar() *LookupEntity {
	if x != nil {
		return x.Calendar
	}
	return nil
}

func (x *WorkingSchedule) GetStartDateAt() int64 {
	if x != nil {
		return x.StartDateAt
	}
	return 0
}

func (x *WorkingSchedule) GetEndDateAt() int64 {
	if x != nil {
		return x.EndDateAt
	}
	return 0
}

func (x *WorkingSchedule) GetStartTimeAt() int64 {
	if x != nil {
		return x.StartTimeAt
	}
	return 0
}

func (x *WorkingSchedule) GetEndTimeAt() int64 {
	if x != nil {
		return x.EndTimeAt
	}
	return 0
}

func (x *WorkingSchedule) GetExtraSkills() []*LookupEntity {
	if x != nil {
		return x.ExtraSkills
	}
	return nil
}

func (x *WorkingSchedule) GetBlockOutsideActivity() bool {
	if x != nil {
		return x.BlockOutsideActivity
	}
	return false
}

func (x *WorkingSchedule) GetAgents() []*LookupEntity {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *WorkingSchedule) GetTotalAgents() int64 {
	if x != nil {
		return x.TotalAgents
	}
	return 0
}

type WorkingScheduleForecast_Forecast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hour   int64 `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	Agents int64 `protobuf:"varint,2,opt,name=agents,proto3" json:"agents,omitempty"`
}

func (x *WorkingScheduleForecast_Forecast) Reset() {
	*x = WorkingScheduleForecast_Forecast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_working_schedule_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingScheduleForecast_Forecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingScheduleForecast_Forecast) ProtoMessage() {}

func (x *WorkingScheduleForecast_Forecast) ProtoReflect() protoreflect.Message {
	mi := &file_working_schedule_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingScheduleForecast_Forecast.ProtoReflect.Descriptor instead.
func (*WorkingScheduleForecast_Forecast) Descriptor() ([]byte, []int) {
	return file_working_schedule_proto_rawDescGZIP(), []int{16, 0}
}

func (x *WorkingScheduleForecast_Forecast) GetHour() int64 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *WorkingScheduleForecast_Forecast) GetAgents() int64 {
	if x != nil {
		return x.Agents
	}
	return 0
}

var File_working_schedule_proto protoreflect.FileDescriptor

var file_working_schedule_proto_rawDesc = []byte{
	0x0a, 0x16, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x77, 0x66, 0x6d, 0x1a, 0x1b, 0x62,
	0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x50, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0x49, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x9e, 0x02,
	0x0a, 0x1a, 0x52, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0xe3, 0x01, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0xca, 0x01, 0xba, 0x48, 0xc6, 0x01,
	0x92, 0x01, 0xc2, 0x01, 0x18, 0x01, 0x22, 0xbd, 0x01, 0x72, 0xba, 0x01, 0x10, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x52,
	0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6f, 0x75,
	0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x06,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x47,
	0x0a, 0x1b, 0x52, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x66,
	0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x5c, 0x0a, 0x22, 0x52, 0x65, 0x61, 0x64, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x66,
	0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x23, 0x52, 0x65, 0x61, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x77,
	0x66, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x56, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa1, 0x03, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x01, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xfa, 0x01, 0x48, 0x00, 0x52, 0x01, 0x71, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x48, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0xe3, 0x01,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0xca,
	0x01, 0xba, 0x48, 0xc6, 0x01, 0x92, 0x01, 0xc2, 0x01, 0x18, 0x01, 0x22, 0xbd, 0x01, 0x72, 0xba,
	0x01, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x04, 0x74, 0x65, 0x61, 0x6d, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x74, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x74,
	0x52, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x52, 0x0c, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x16, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x71, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x73, 0x6f, 0x72, 0x74, 0x22, 0x5f, 0x0a, 0x1d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0x50, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x49, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0x62, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66,
	0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x53, 0x0a, 0x26, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x41,
	0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x27, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x28, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x41,
	0x0a, 0x08, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x1a, 0x36, 0x0a, 0x08, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x68, 0x6f, 0x75,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xcc, 0x05, 0x0a, 0x0f, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0xc8,
	0x01, 0x01, 0x72, 0x05, 0x10, 0x01, 0x18, 0xfa, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x63, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x74, 0x12, 0x1e,
	0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x74, 0x12, 0x34,
	0x0a, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6f, 0x75,
	0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x73, 0x69,
	0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2a, 0xcc, 0x01, 0x0a, 0x14, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x22, 0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x43, 0x48,
	0x45, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x57, 0x4f, 0x52,
	0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e,
	0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x20, 0x0a, 0x1c, 0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x43, 0x48, 0x45,
	0x44, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54,
	0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x43,
	0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x52, 0x43,
	0x48, 0x49, 0x56, 0x45, 0x44, 0x10, 0x04, 0x32, 0xad, 0x0a, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x77,
	0x66, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2d, 0x90, 0xb5, 0x18, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a,
	0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x77, 0x66, 0x6d, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x77, 0x66, 0x6d,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x66,
	0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x90,
	0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x77, 0x66, 0x6d, 0x2f,
	0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xaa,
	0x01, 0x0a, 0x1b, 0x52, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x27,
	0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x38, 0x90, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f,
	0x77, 0x66, 0x6d, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x8a, 0x01, 0x0a, 0x15,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x90, 0xb5,
	0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x77, 0x66, 0x6d, 0x2f, 0x6c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x97, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x21, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x90, 0xb5, 0x18, 0x02, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x1a, 0x28, 0x2f, 0x77, 0x66, 0x6d, 0x2f, 0x6c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x69,
	0x64, 0x7d, 0x12, 0xb4, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39,
	0x90, 0xb5, 0x18, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f,
	0x77, 0x66, 0x6d, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xc2, 0x01, 0x0a, 0x20, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2c,
	0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x77,
	0x66, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x90, 0xb5, 0x18,
	0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x2a, 0x35, 0x2f, 0x77, 0x66, 0x6d, 0x2f, 0x6c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x8f,
	0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x66,
	0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2f, 0x90, 0xb5, 0x18, 0x03, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x2a, 0x23, 0x2f, 0x77, 0x66,
	0x6d, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x1a, 0x15, 0x8a, 0xb5, 0x18, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x77, 0x66, 0x6d, 0x3b, 0x77, 0x66, 0x6d, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_working_schedule_proto_rawDescOnce sync.Once
	file_working_schedule_proto_rawDescData = file_working_schedule_proto_rawDesc
)

func file_working_schedule_proto_rawDescGZIP() []byte {
	file_working_schedule_proto_rawDescOnce.Do(func() {
		file_working_schedule_proto_rawDescData = protoimpl.X.CompressGZIP(file_working_schedule_proto_rawDescData)
	})
	return file_working_schedule_proto_rawDescData
}

var file_working_schedule_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_working_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_working_schedule_proto_goTypes = []interface{}{
	(WorkingScheduleState)(0),                        // 0: wfm.WorkingScheduleState
	(*CreateWorkingScheduleRequest)(nil),             // 1: wfm.CreateWorkingScheduleRequest
	(*CreateWorkingScheduleResponse)(nil),            // 2: wfm.CreateWorkingScheduleResponse
	(*ReadWorkingScheduleRequest)(nil),               // 3: wfm.ReadWorkingScheduleRequest
	(*ReadWorkingScheduleResponse)(nil),              // 4: wfm.ReadWorkingScheduleResponse
	(*ReadWorkingScheduleForecastRequest)(nil),       // 5: wfm.ReadWorkingScheduleForecastRequest
	(*ReadWorkingScheduleForecastResponse)(nil),      // 6: wfm.ReadWorkingScheduleForecastResponse
	(*SearchWorkingScheduleRequest)(nil),             // 7: wfm.SearchWorkingScheduleRequest
	(*SearchWorkingScheduleResponse)(nil),            // 8: wfm.SearchWorkingScheduleResponse
	(*UpdateWorkingScheduleRequest)(nil),             // 9: wfm.UpdateWorkingScheduleRequest
	(*UpdateWorkingScheduleResponse)(nil),            // 10: wfm.UpdateWorkingScheduleResponse
	(*UpdateWorkingScheduleAddAgentsRequest)(nil),    // 11: wfm.UpdateWorkingScheduleAddAgentsRequest
	(*UpdateWorkingScheduleAddAgentsResponse)(nil),   // 12: wfm.UpdateWorkingScheduleAddAgentsResponse
	(*UpdateWorkingScheduleRemoveAgentRequest)(nil),  // 13: wfm.UpdateWorkingScheduleRemoveAgentRequest
	(*UpdateWorkingScheduleRemoveAgentResponse)(nil), // 14: wfm.UpdateWorkingScheduleRemoveAgentResponse
	(*DeleteWorkingScheduleRequest)(nil),             // 15: wfm.DeleteWorkingScheduleRequest
	(*DeleteWorkingScheduleResponse)(nil),            // 16: wfm.DeleteWorkingScheduleResponse
	(*WorkingScheduleForecast)(nil),                  // 17: wfm.WorkingScheduleForecast
	(*WorkingSchedule)(nil),                          // 18: wfm.WorkingSchedule
	nil,                                              // 19: wfm.ReadWorkingScheduleForecastResponse.ItemsEntry
	(*WorkingScheduleForecast_Forecast)(nil),         // 20: wfm.WorkingScheduleForecast.Forecast
	(*FilterBetween)(nil),                            // 21: wfm.FilterBetween
	(*LookupEntity)(nil),                             // 22: wfm.LookupEntity
}
var file_working_schedule_proto_depIdxs = []int32{
	18, // 0: wfm.CreateWorkingScheduleRequest.item:type_name -> wfm.WorkingSchedule
	18, // 1: wfm.CreateWorkingScheduleResponse.item:type_name -> wfm.WorkingSchedule
	18, // 2: wfm.ReadWorkingScheduleResponse.item:type_name -> wfm.WorkingSchedule
	21, // 3: wfm.ReadWorkingScheduleForecastRequest.date:type_name -> wfm.FilterBetween
	19, // 4: wfm.ReadWorkingScheduleForecastResponse.items:type_name -> wfm.ReadWorkingScheduleForecastResponse.ItemsEntry
	18, // 5: wfm.SearchWorkingScheduleResponse.items:type_name -> wfm.WorkingSchedule
	18, // 6: wfm.UpdateWorkingScheduleRequest.item:type_name -> wfm.WorkingSchedule
	18, // 7: wfm.UpdateWorkingScheduleResponse.item:type_name -> wfm.WorkingSchedule
	22, // 8: wfm.UpdateWorkingScheduleAddAgentsRequest.agents:type_name -> wfm.LookupEntity
	22, // 9: wfm.UpdateWorkingScheduleAddAgentsResponse.agents:type_name -> wfm.LookupEntity
	20, // 10: wfm.WorkingScheduleForecast.forecast:type_name -> wfm.WorkingScheduleForecast.Forecast
	22, // 11: wfm.WorkingSchedule.created_by:type_name -> wfm.LookupEntity
	22, // 12: wfm.WorkingSchedule.updated_by:type_name -> wfm.LookupEntity
	0,  // 13: wfm.WorkingSchedule.state:type_name -> wfm.WorkingScheduleState
	22, // 14: wfm.WorkingSchedule.team:type_name -> wfm.LookupEntity
	22, // 15: wfm.WorkingSchedule.calendar:type_name -> wfm.LookupEntity
	22, // 16: wfm.WorkingSchedule.extra_skills:type_name -> wfm.LookupEntity
	22, // 17: wfm.WorkingSchedule.agents:type_name -> wfm.LookupEntity
	17, // 18: wfm.ReadWorkingScheduleForecastResponse.ItemsEntry.value:type_name -> wfm.WorkingScheduleForecast
	1,  // 19: wfm.WorkingScheduleService.CreateWorkingSchedule:input_type -> wfm.CreateWorkingScheduleRequest
	3,  // 20: wfm.WorkingScheduleService.ReadWorkingSchedule:input_type -> wfm.ReadWorkingScheduleRequest
	5,  // 21: wfm.WorkingScheduleService.ReadWorkingScheduleForecast:input_type -> wfm.ReadWorkingScheduleForecastRequest
	7,  // 22: wfm.WorkingScheduleService.SearchWorkingSchedule:input_type -> wfm.SearchWorkingScheduleRequest
	9,  // 23: wfm.WorkingScheduleService.UpdateWorkingSchedule:input_type -> wfm.UpdateWorkingScheduleRequest
	11, // 24: wfm.WorkingScheduleService.UpdateWorkingScheduleAddAgents:input_type -> wfm.UpdateWorkingScheduleAddAgentsRequest
	13, // 25: wfm.WorkingScheduleService.UpdateWorkingScheduleRemoveAgent:input_type -> wfm.UpdateWorkingScheduleRemoveAgentRequest
	15, // 26: wfm.WorkingScheduleService.DeleteWorkingSchedule:input_type -> wfm.DeleteWorkingScheduleRequest
	2,  // 27: wfm.WorkingScheduleService.CreateWorkingSchedule:output_type -> wfm.CreateWorkingScheduleResponse
	4,  // 28: wfm.WorkingScheduleService.ReadWorkingSchedule:output_type -> wfm.ReadWorkingScheduleResponse
	6,  // 29: wfm.WorkingScheduleService.ReadWorkingScheduleForecast:output_type -> wfm.ReadWorkingScheduleForecastResponse
	8,  // 30: wfm.WorkingScheduleService.SearchWorkingSchedule:output_type -> wfm.SearchWorkingScheduleResponse
	10, // 31: wfm.WorkingScheduleService.UpdateWorkingSchedule:output_type -> wfm.UpdateWorkingScheduleResponse
	12, // 32: wfm.WorkingScheduleService.UpdateWorkingScheduleAddAgents:output_type -> wfm.UpdateWorkingScheduleAddAgentsResponse
	14, // 33: wfm.WorkingScheduleService.UpdateWorkingScheduleRemoveAgent:output_type -> wfm.UpdateWorkingScheduleRemoveAgentResponse
	16, // 34: wfm.WorkingScheduleService.DeleteWorkingSchedule:output_type -> wfm.DeleteWorkingScheduleResponse
	27, // [27:35] is the sub-list for method output_type
	19, // [19:27] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_working_schedule_proto_init() }
func file_working_schedule_proto_init() {
	if File_working_schedule_proto != nil {
		return
	}
	file_lookup_proto_init()
	file_filter_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_working_schedule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkingScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkingScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadWorkingScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadWorkingScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadWorkingScheduleForecastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadWorkingScheduleForecastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchWorkingScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchWorkingScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkingScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkingScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkingScheduleAddAgentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkingScheduleAddAgentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkingScheduleRemoveAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkingScheduleRemoveAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkingScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkingScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingScheduleForecast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_working_schedule_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingScheduleForecast_Forecast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_working_schedule_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_working_schedule_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_working_schedule_proto_goTypes,
		DependencyIndexes: file_working_schedule_proto_depIdxs,
		EnumInfos:         file_working_schedule_proto_enumTypes,
		MessageInfos:      file_working_schedule_proto_msgTypes,
	}.Build()
	File_working_schedule_proto = out.File
	file_working_schedule_proto_rawDesc = nil
	file_working_schedule_proto_goTypes = nil
	file_working_schedule_proto_depIdxs = nil
}
