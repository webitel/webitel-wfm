// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: agent_working_schedule.proto

package wfm

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/webitel/webitel-go-kit/cmd/protoc-gen-go-webitel/gen/go/proto/webitel"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAgentsWorkingScheduleShiftsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkingScheduleId int64           `protobuf:"varint,1,opt,name=working_schedule_id,json=workingScheduleId,proto3" json:"working_schedule_id,omitempty"`
	Date              *FilterBetween  `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Agents            []*LookupEntity `protobuf:"bytes,3,rep,name=agents,proto3" json:"agents,omitempty"`
	// Map key is a day of week: 0 - Sunday, ..., 6 - Saturday.
	Items map[int64]*AgentScheduleShift `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateAgentsWorkingScheduleShiftsRequest) Reset() {
	*x = CreateAgentsWorkingScheduleShiftsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_working_schedule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentsWorkingScheduleShiftsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentsWorkingScheduleShiftsRequest) ProtoMessage() {}

func (x *CreateAgentsWorkingScheduleShiftsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_working_schedule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentsWorkingScheduleShiftsRequest.ProtoReflect.Descriptor instead.
func (*CreateAgentsWorkingScheduleShiftsRequest) Descriptor() ([]byte, []int) {
	return file_agent_working_schedule_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAgentsWorkingScheduleShiftsRequest) GetWorkingScheduleId() int64 {
	if x != nil {
		return x.WorkingScheduleId
	}
	return 0
}

func (x *CreateAgentsWorkingScheduleShiftsRequest) GetDate() *FilterBetween {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *CreateAgentsWorkingScheduleShiftsRequest) GetAgents() []*LookupEntity {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *CreateAgentsWorkingScheduleShiftsRequest) GetItems() map[int64]*AgentScheduleShift {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateAgentsWorkingScheduleShiftsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AgentWorkingSchedule `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CreateAgentsWorkingScheduleShiftsResponse) Reset() {
	*x = CreateAgentsWorkingScheduleShiftsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_working_schedule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentsWorkingScheduleShiftsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentsWorkingScheduleShiftsResponse) ProtoMessage() {}

func (x *CreateAgentsWorkingScheduleShiftsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_working_schedule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentsWorkingScheduleShiftsResponse.ProtoReflect.Descriptor instead.
func (*CreateAgentsWorkingScheduleShiftsResponse) Descriptor() ([]byte, []int) {
	return file_agent_working_schedule_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAgentsWorkingScheduleShiftsResponse) GetItems() []*AgentWorkingSchedule {
	if x != nil {
		return x.Items
	}
	return nil
}

type SearchAgentsWorkingScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkingScheduleId int64          `protobuf:"varint,1,opt,name=working_schedule_id,json=workingScheduleId,proto3" json:"working_schedule_id,omitempty"`
	Date              *FilterBetween `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	SupervisorId      []int64        `protobuf:"varint,3,rep,packed,name=supervisor_id,json=supervisorId,proto3" json:"supervisor_id,omitempty"`
	TeamId            []int64        `protobuf:"varint,4,rep,packed,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	SkillId           []int64        `protobuf:"varint,5,rep,packed,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Q                 *string        `protobuf:"bytes,6,opt,name=q,proto3,oneof" json:"q,omitempty"`
}

func (x *SearchAgentsWorkingScheduleRequest) Reset() {
	*x = SearchAgentsWorkingScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_working_schedule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAgentsWorkingScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAgentsWorkingScheduleRequest) ProtoMessage() {}

func (x *SearchAgentsWorkingScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_working_schedule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAgentsWorkingScheduleRequest.ProtoReflect.Descriptor instead.
func (*SearchAgentsWorkingScheduleRequest) Descriptor() ([]byte, []int) {
	return file_agent_working_schedule_proto_rawDescGZIP(), []int{2}
}

func (x *SearchAgentsWorkingScheduleRequest) GetWorkingScheduleId() int64 {
	if x != nil {
		return x.WorkingScheduleId
	}
	return 0
}

func (x *SearchAgentsWorkingScheduleRequest) GetDate() *FilterBetween {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *SearchAgentsWorkingScheduleRequest) GetSupervisorId() []int64 {
	if x != nil {
		return x.SupervisorId
	}
	return nil
}

func (x *SearchAgentsWorkingScheduleRequest) GetTeamId() []int64 {
	if x != nil {
		return x.TeamId
	}
	return nil
}

func (x *SearchAgentsWorkingScheduleRequest) GetSkillId() []int64 {
	if x != nil {
		return x.SkillId
	}
	return nil
}

func (x *SearchAgentsWorkingScheduleRequest) GetQ() string {
	if x != nil && x.Q != nil {
		return *x.Q
	}
	return ""
}

type SearchAgentsWorkingScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Holidays []*Holiday              `protobuf:"bytes,1,rep,name=holidays,proto3" json:"holidays,omitempty"`
	Items    []*AgentWorkingSchedule `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Total    int64                   `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchAgentsWorkingScheduleResponse) Reset() {
	*x = SearchAgentsWorkingScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_working_schedule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAgentsWorkingScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAgentsWorkingScheduleResponse) ProtoMessage() {}

func (x *SearchAgentsWorkingScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_working_schedule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAgentsWorkingScheduleResponse.ProtoReflect.Descriptor instead.
func (*SearchAgentsWorkingScheduleResponse) Descriptor() ([]byte, []int) {
	return file_agent_working_schedule_proto_rawDescGZIP(), []int{3}
}

func (x *SearchAgentsWorkingScheduleResponse) GetHolidays() []*Holiday {
	if x != nil {
		return x.Holidays
	}
	return nil
}

func (x *SearchAgentsWorkingScheduleResponse) GetItems() []*AgentWorkingSchedule {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchAgentsWorkingScheduleResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Holiday struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date int64  `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Holiday) Reset() {
	*x = Holiday{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_working_schedule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Holiday) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Holiday) ProtoMessage() {}

func (x *Holiday) ProtoReflect() protoreflect.Message {
	mi := &file_agent_working_schedule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Holiday.ProtoReflect.Descriptor instead.
func (*Holiday) Descriptor() ([]byte, []int) {
	return file_agent_working_schedule_proto_rawDescGZIP(), []int{4}
}

func (x *Holiday) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *Holiday) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AgentScheduleShiftPause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId  int64         `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt int64         `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy *LookupEntity `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt int64         `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy *LookupEntity `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Start     int64         `protobuf:"varint,7,opt,name=start,proto3" json:"start,omitempty"`
	End       int64         `protobuf:"varint,8,opt,name=end,proto3" json:"end,omitempty"`
	Cause     *LookupEntity `protobuf:"bytes,9,opt,name=cause,proto3,oneof" json:"cause,omitempty"`
}

func (x *AgentScheduleShiftPause) Reset() {
	*x = AgentScheduleShiftPause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_working_schedule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentScheduleShiftPause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentScheduleShiftPause) ProtoMessage() {}

func (x *AgentScheduleShiftPause) ProtoReflect() protoreflect.Message {
	mi := &file_agent_working_schedule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentScheduleShiftPause.ProtoReflect.Descriptor instead.
func (*AgentScheduleShiftPause) Descriptor() ([]byte, []int) {
	return file_agent_working_schedule_proto_rawDescGZIP(), []int{5}
}

func (x *AgentScheduleShiftPause) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentScheduleShiftPause) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *AgentScheduleShiftPause) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentScheduleShiftPause) GetCreatedBy() *LookupEntity {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *AgentScheduleShiftPause) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AgentScheduleShiftPause) GetUpdatedBy() *LookupEntity {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *AgentScheduleShiftPause) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *AgentScheduleShiftPause) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *AgentScheduleShiftPause) GetCause() *LookupEntity {
	if x != nil {
		return x.Cause
	}
	return nil
}

type AgentScheduleShiftSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skill    *LookupEntity `protobuf:"bytes,1,opt,name=skill,proto3" json:"skill,omitempty"`
	Capacity int64         `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Enabled  bool          `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *AgentScheduleShiftSkill) Reset() {
	*x = AgentScheduleShiftSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_working_schedule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentScheduleShiftSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentScheduleShiftSkill) ProtoMessage() {}

func (x *AgentScheduleShiftSkill) ProtoReflect() protoreflect.Message {
	mi := &file_agent_working_schedule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentScheduleShiftSkill.ProtoReflect.Descriptor instead.
func (*AgentScheduleShiftSkill) Descriptor() ([]byte, []int) {
	return file_agent_working_schedule_proto_rawDescGZIP(), []int{6}
}

func (x *AgentScheduleShiftSkill) GetSkill() *LookupEntity {
	if x != nil {
		return x.Skill
	}
	return nil
}

func (x *AgentScheduleShiftSkill) GetCapacity() int64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *AgentScheduleShiftSkill) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type AgentScheduleShift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId  int64                      `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt int64                      `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy *LookupEntity              `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt int64                      `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy *LookupEntity              `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Start     int64                      `protobuf:"varint,7,opt,name=start,proto3" json:"start,omitempty"`
	End       int64                      `protobuf:"varint,8,opt,name=end,proto3" json:"end,omitempty"`
	Pauses    []*AgentScheduleShiftPause `protobuf:"bytes,9,rep,name=pauses,proto3" json:"pauses,omitempty"`
	Skills    []*AgentScheduleShiftSkill `protobuf:"bytes,10,rep,name=skills,proto3" json:"skills,omitempty"`
}

func (x *AgentScheduleShift) Reset() {
	*x = AgentScheduleShift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_working_schedule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentScheduleShift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentScheduleShift) ProtoMessage() {}

func (x *AgentScheduleShift) ProtoReflect() protoreflect.Message {
	mi := &file_agent_working_schedule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentScheduleShift.ProtoReflect.Descriptor instead.
func (*AgentScheduleShift) Descriptor() ([]byte, []int) {
	return file_agent_working_schedule_proto_rawDescGZIP(), []int{7}
}

func (x *AgentScheduleShift) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentScheduleShift) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *AgentScheduleShift) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentScheduleShift) GetCreatedBy() *LookupEntity {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *AgentScheduleShift) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AgentScheduleShift) GetUpdatedBy() *LookupEntity {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *AgentScheduleShift) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *AgentScheduleShift) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *AgentScheduleShift) GetPauses() []*AgentScheduleShiftPause {
	if x != nil {
		return x.Pauses
	}
	return nil
}

func (x *AgentScheduleShift) GetSkills() []*AgentScheduleShiftSkill {
	if x != nil {
		return x.Skills
	}
	return nil
}

type AgentSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date   int64 `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Locked bool  `protobuf:"varint,2,opt,name=locked,proto3" json:"locked,omitempty"`
	// Types that are assignable to Type:
	//
	//	*AgentSchedule_Absence
	//	*AgentSchedule_Shift
	Type isAgentSchedule_Type `protobuf_oneof:"type"`
}

func (x *AgentSchedule) Reset() {
	*x = AgentSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_working_schedule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentSchedule) ProtoMessage() {}

func (x *AgentSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_agent_working_schedule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentSchedule.ProtoReflect.Descriptor instead.
func (*AgentSchedule) Descriptor() ([]byte, []int) {
	return file_agent_working_schedule_proto_rawDescGZIP(), []int{8}
}

func (x *AgentSchedule) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *AgentSchedule) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (m *AgentSchedule) GetType() isAgentSchedule_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *AgentSchedule) GetAbsence() AbsenceType {
	if x, ok := x.GetType().(*AgentSchedule_Absence); ok {
		return x.Absence
	}
	return AbsenceType_ABSENCE_TYPE_UNSPECIFIED
}

func (x *AgentSchedule) GetShift() *AgentScheduleShift {
	if x, ok := x.GetType().(*AgentSchedule_Shift); ok {
		return x.Shift
	}
	return nil
}

type isAgentSchedule_Type interface {
	isAgentSchedule_Type()
}

type AgentSchedule_Absence struct {
	Absence AbsenceType `protobuf:"varint,3,opt,name=absence,proto3,enum=wfm.AbsenceType,oneof"`
}

type AgentSchedule_Shift struct {
	Shift *AgentScheduleShift `protobuf:"bytes,4,opt,name=shift,proto3,oneof"`
}

func (*AgentSchedule_Absence) isAgentSchedule_Type() {}

func (*AgentSchedule_Shift) isAgentSchedule_Type() {}

type AgentWorkingSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent    *LookupEntity    `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	Schedule []*AgentSchedule `protobuf:"bytes,2,rep,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *AgentWorkingSchedule) Reset() {
	*x = AgentWorkingSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_working_schedule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentWorkingSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentWorkingSchedule) ProtoMessage() {}

func (x *AgentWorkingSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_agent_working_schedule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentWorkingSchedule.ProtoReflect.Descriptor instead.
func (*AgentWorkingSchedule) Descriptor() ([]byte, []int) {
	return file_agent_working_schedule_proto_rawDescGZIP(), []int{9}
}

func (x *AgentWorkingSchedule) GetAgent() *LookupEntity {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *AgentWorkingSchedule) GetSchedule() []*AgentSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

var File_agent_working_schedule_proto protoreflect.FileDescriptor

var file_agent_working_schedule_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x77, 0x66, 0x6d, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x62,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x02, 0x0a, 0x28,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x6a, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x77,
	0x66, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x68,
	0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x1a, 0xba, 0x48, 0x17, 0xc8, 0x01, 0x01, 0x9a, 0x01,
	0x11, 0x08, 0x01, 0x10, 0x07, 0x22, 0x06, 0x22, 0x04, 0x18, 0x06, 0x28, 0x00, 0x2a, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x51, 0x0a, 0x0a, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x66,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x29,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x22, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x65, 0x74, 0x77,
	0x65, 0x65, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0c, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x11, 0x0a, 0x01, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x01, 0x71, 0x88, 0x01, 0x01, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x71, 0x22, 0x96, 0x01, 0x0a, 0x23,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x48, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x79, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x73, 0x12, 0x2f, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77,
	0x66, 0x6d, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x31, 0x0a, 0x07, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb6, 0x03, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0xc8, 0x01, 0x01, 0x22, 0x05, 0x18, 0xa0, 0x0b, 0x28, 0x00,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0xc8, 0x01, 0x01, 0x22, 0x05, 0x18, 0xa0,
	0x0b, 0x28, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x63, 0x61,
	0x75, 0x73, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x4e, 0xba, 0x48, 0x4b, 0x1a, 0x49, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x2a, 0x65, 0x6e, 0x64, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x63, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x72, 0x20,
	0x74, 0x68, 0x61, 0x6e, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x1a,
	0x15, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x3c, 0x20, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x65, 0x6e, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65,
	0x22, 0x88, 0x01, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x2f, 0x0a, 0x05,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66,
	0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x22, 0x0a,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xe5, 0x03, 0x0a, 0x12,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x68, 0x69,
	0x66, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0d, 0xba, 0x48, 0x0a, 0xc8, 0x01, 0x01, 0x22, 0x05, 0x18, 0xa0, 0x0b, 0x28, 0x00, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0xc8, 0x01, 0x01, 0x22, 0x05, 0x18, 0xa0, 0x0b,
	0x28, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x75, 0x73, 0x65, 0x73, 0x12, 0x34, 0x0a,
	0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x77, 0x66, 0x6d, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x3a, 0x4e, 0xba, 0x48, 0x4b, 0x1a, 0x49, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x2a, 0x65, 0x6e, 0x64, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x20, 0x62, 0x65, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x72, 0x20, 0x74, 0x68, 0x61,
	0x6e, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x15, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x3c, 0x20, 0x74, 0x68, 0x69, 0x73, 0x2e,
	0x65, 0x6e, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x41, 0x62, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x2f, 0x0a, 0x05, 0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x68, 0x69, 0x66, 0x74,
	0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6f, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x27, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x66,
	0x6d, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x32, 0xb1, 0x03, 0x0a, 0x1b, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xc6, 0x01, 0x0a, 0x21, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x73, 0x12,
	0x2d, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x53, 0x68, 0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42,
	0x90, 0xb5, 0x18, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x3a, 0x01, 0x2a, 0x22, 0x33, 0x2f,
	0x77, 0x66, 0x6d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0xb1, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x27, 0x2e, 0x77, 0x66, 0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x66,
	0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x90, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x35, 0x12, 0x33, 0x2f, 0x77, 0x66, 0x6d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x1a, 0x15, 0x8a, 0xb5, 0x18, 0x11, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x23, 0x5a,
	0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x69,
	0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x77, 0x66, 0x6d, 0x3b, 0x77,
	0x66, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agent_working_schedule_proto_rawDescOnce sync.Once
	file_agent_working_schedule_proto_rawDescData = file_agent_working_schedule_proto_rawDesc
)

func file_agent_working_schedule_proto_rawDescGZIP() []byte {
	file_agent_working_schedule_proto_rawDescOnce.Do(func() {
		file_agent_working_schedule_proto_rawDescData = protoimpl.X.CompressGZIP(file_agent_working_schedule_proto_rawDescData)
	})
	return file_agent_working_schedule_proto_rawDescData
}

var file_agent_working_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_agent_working_schedule_proto_goTypes = []interface{}{
	(*CreateAgentsWorkingScheduleShiftsRequest)(nil),  // 0: wfm.CreateAgentsWorkingScheduleShiftsRequest
	(*CreateAgentsWorkingScheduleShiftsResponse)(nil), // 1: wfm.CreateAgentsWorkingScheduleShiftsResponse
	(*SearchAgentsWorkingScheduleRequest)(nil),        // 2: wfm.SearchAgentsWorkingScheduleRequest
	(*SearchAgentsWorkingScheduleResponse)(nil),       // 3: wfm.SearchAgentsWorkingScheduleResponse
	(*Holiday)(nil),                 // 4: wfm.Holiday
	(*AgentScheduleShiftPause)(nil), // 5: wfm.AgentScheduleShiftPause
	(*AgentScheduleShiftSkill)(nil), // 6: wfm.AgentScheduleShiftSkill
	(*AgentScheduleShift)(nil),      // 7: wfm.AgentScheduleShift
	(*AgentSchedule)(nil),           // 8: wfm.AgentSchedule
	(*AgentWorkingSchedule)(nil),    // 9: wfm.AgentWorkingSchedule
	nil,                             // 10: wfm.CreateAgentsWorkingScheduleShiftsRequest.ItemsEntry
	(*FilterBetween)(nil),           // 11: wfm.FilterBetween
	(*LookupEntity)(nil),            // 12: wfm.LookupEntity
	(AbsenceType)(0),                // 13: wfm.AbsenceType
}
var file_agent_working_schedule_proto_depIdxs = []int32{
	11, // 0: wfm.CreateAgentsWorkingScheduleShiftsRequest.date:type_name -> wfm.FilterBetween
	12, // 1: wfm.CreateAgentsWorkingScheduleShiftsRequest.agents:type_name -> wfm.LookupEntity
	10, // 2: wfm.CreateAgentsWorkingScheduleShiftsRequest.items:type_name -> wfm.CreateAgentsWorkingScheduleShiftsRequest.ItemsEntry
	9,  // 3: wfm.CreateAgentsWorkingScheduleShiftsResponse.items:type_name -> wfm.AgentWorkingSchedule
	11, // 4: wfm.SearchAgentsWorkingScheduleRequest.date:type_name -> wfm.FilterBetween
	4,  // 5: wfm.SearchAgentsWorkingScheduleResponse.holidays:type_name -> wfm.Holiday
	9,  // 6: wfm.SearchAgentsWorkingScheduleResponse.items:type_name -> wfm.AgentWorkingSchedule
	12, // 7: wfm.AgentScheduleShiftPause.created_by:type_name -> wfm.LookupEntity
	12, // 8: wfm.AgentScheduleShiftPause.updated_by:type_name -> wfm.LookupEntity
	12, // 9: wfm.AgentScheduleShiftPause.cause:type_name -> wfm.LookupEntity
	12, // 10: wfm.AgentScheduleShiftSkill.skill:type_name -> wfm.LookupEntity
	12, // 11: wfm.AgentScheduleShift.created_by:type_name -> wfm.LookupEntity
	12, // 12: wfm.AgentScheduleShift.updated_by:type_name -> wfm.LookupEntity
	5,  // 13: wfm.AgentScheduleShift.pauses:type_name -> wfm.AgentScheduleShiftPause
	6,  // 14: wfm.AgentScheduleShift.skills:type_name -> wfm.AgentScheduleShiftSkill
	13, // 15: wfm.AgentSchedule.absence:type_name -> wfm.AbsenceType
	7,  // 16: wfm.AgentSchedule.shift:type_name -> wfm.AgentScheduleShift
	12, // 17: wfm.AgentWorkingSchedule.agent:type_name -> wfm.LookupEntity
	8,  // 18: wfm.AgentWorkingSchedule.schedule:type_name -> wfm.AgentSchedule
	7,  // 19: wfm.CreateAgentsWorkingScheduleShiftsRequest.ItemsEntry.value:type_name -> wfm.AgentScheduleShift
	0,  // 20: wfm.AgentWorkingScheduleService.CreateAgentsWorkingScheduleShifts:input_type -> wfm.CreateAgentsWorkingScheduleShiftsRequest
	2,  // 21: wfm.AgentWorkingScheduleService.SearchAgentsWorkingSchedule:input_type -> wfm.SearchAgentsWorkingScheduleRequest
	1,  // 22: wfm.AgentWorkingScheduleService.CreateAgentsWorkingScheduleShifts:output_type -> wfm.CreateAgentsWorkingScheduleShiftsResponse
	3,  // 23: wfm.AgentWorkingScheduleService.SearchAgentsWorkingSchedule:output_type -> wfm.SearchAgentsWorkingScheduleResponse
	22, // [22:24] is the sub-list for method output_type
	20, // [20:22] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_agent_working_schedule_proto_init() }
func file_agent_working_schedule_proto_init() {
	if File_agent_working_schedule_proto != nil {
		return
	}
	file_lookup_proto_init()
	file_filter_proto_init()
	file_agent_absence_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_agent_working_schedule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAgentsWorkingScheduleShiftsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_working_schedule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAgentsWorkingScheduleShiftsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_working_schedule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAgentsWorkingScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_working_schedule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAgentsWorkingScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_working_schedule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Holiday); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_working_schedule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentScheduleShiftPause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_working_schedule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentScheduleShiftSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_working_schedule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentScheduleShift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_working_schedule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_working_schedule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentWorkingSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_agent_working_schedule_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_agent_working_schedule_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_agent_working_schedule_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*AgentSchedule_Absence)(nil),
		(*AgentSchedule_Shift)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agent_working_schedule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_working_schedule_proto_goTypes,
		DependencyIndexes: file_agent_working_schedule_proto_depIdxs,
		MessageInfos:      file_agent_working_schedule_proto_msgTypes,
	}.Build()
	File_agent_working_schedule_proto = out.File
	file_agent_working_schedule_proto_rawDesc = nil
	file_agent_working_schedule_proto_goTypes = nil
	file_agent_working_schedule_proto_depIdxs = nil
}
