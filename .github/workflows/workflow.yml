name: Workflow

on:
  push:
    branches: [ main, v*.* ]

permissions: { contents: read }
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    name: Prepare
    uses: webitel/reusable-workflows/.github/workflows/go-prepare.yml@c22ca37dc19e5b0be63a5dcc871a867b00aba6d4
    with:
      development-branch: ${{ github.event.repository.default_branch }}
      triggered-branch: ${{ github.ref_name }}
      build-number: ${{ github.run_number }}

  checks:
    name: Checks
    needs: [ prepare ]
    uses: webitel/reusable-workflows/.github/workflows/go-checks.yml@c22ca37dc19e5b0be63a5dcc871a867b00aba6d4
    permissions:
      contents: read
      actions: read
      security-events: write

  compile:
    name: Build
    needs: [ prepare ]
    uses: webitel/reusable-workflows/.github/workflows/go-build.yml@c22ca37dc19e5b0be63a5dcc871a867b00aba6d4
    with:
      binary-name: ${{ vars.SERVICE_NAME }}
      ldflags: >
        -s -w
        -X github.com/webitel/webitel-wfm/cmd.version=${{ needs.prepare.outputs.version }}-${{ needs.prepare.outputs.version-build }}
        -X github.com/webitel/webitel-wfm/cmd.commit=${{ github.sha }}
        -X github.com/webitel/webitel-wfm/cmd.branch=${{ github.ref_name }}

      version: ${{ needs.prepare.outputs.version }}
      version-build: ${{ github.run_number }}
      prerelease: ${{ github.event.repository.default_branch == github.ref_name && 'dev' }}
      package-name: ${{ vars.SERVICE_NAME }}
      package-description: |
        Webitel workforce management service (WFM) package.

      package-contents: |
        src=deploy/systemd/${{ vars.SERVICE_NAME }}.service dst=/etc/systemd/system/${{ vars.SERVICE_NAME }}.service type=config

  deploy:
    name: Deploy
    needs: [ prepare, compile ]
    uses: webitel/reusable-workflows/.github/workflows/_deploy.yml@c22ca37dc19e5b0be63a5dcc871a867b00aba6d4
    permissions: { contents: write }
    secrets: inherit
    with:
      component: ${{ needs.prepare.outputs.component }}
      repository-environment: ${{ github.event.repository.default_branch == github.ref_name && 'acceptance' || needs.prepare.outputs.component }}
      create-tag: ${{ github.event.repository.default_branch != github.ref_name }}
      version: ${{ needs.prepare.outputs.version }}-${{ github.run_number}}